{"ast":null,"code":"var _jsxFileName = \"/media/devdeadviz/1AAA83FAAA83D125/Projects/evernote-clone/src/sideBar/SideBar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport styles from \"./styles\";\nimport List from \"@material-ui/core/List\";\nimport { Divider, Button } from \"@material-ui/core\";\nimport SideBarItem from \"../sideBarItem/SideBarItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SideBar = ({\n  notes,\n  classes,\n  selectedNoteIndex\n}) => {\n  _s();\n\n  const [addingNote, setAddingNote] = useState(false);\n  const [title, setTitle] = useState(null);\n\n  const newNoteBtnClick = () => {\n    setAddingNote(!addingNote);\n    setTitle(null);\n  };\n\n  const updateTitle = txt => {\n    setTitle(txt);\n  };\n\n  const newNote = () => {\n    console.log(addingNote, title);\n  };\n\n  const selectNote = (n, i) => {\n    console.log(\"Select Note\");\n  };\n\n  const deleteNote = note => {\n    if (window.confirm(`Are you sure you want to delete: ${note.title}`)) {\n      console.log(\"Delete note\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.sidebarContainer,\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: newNoteBtnClick,\n      className: classes.newNoteBtn,\n      children: addingNote ? \"Cancel\" : \"New Note\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), addingNote ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter note title\",\n        onKeyUp: e => updateTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.newNoteSubmitBtn,\n        onClick: newNote,\n        children: \"Submit Note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(List, {\n      children: notes.map((_note, _index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(SideBarItem, {\n            _note: _note,\n            _index: _index,\n            selectedNoteIndex: selectedNoteIndex,\n            selectNote: selectNote,\n            deleteNote: deleteNote\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this)]\n        }, _index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SideBar, \"+/AJaWFnSGwVe5K02UVYENJbWjI=\");\n\n_c = SideBar;\nexport default withStyles(styles)(SideBar);\n\nvar _c;\n\n$RefreshReg$(_c, \"SideBar\");","map":{"version":3,"sources":["/media/devdeadviz/1AAA83FAAA83D125/Projects/evernote-clone/src/sideBar/SideBar.js"],"names":["React","useState","withStyles","styles","List","Divider","Button","SideBarItem","SideBar","notes","classes","selectedNoteIndex","addingNote","setAddingNote","title","setTitle","newNoteBtnClick","updateTitle","txt","newNote","console","log","selectNote","n","i","deleteNote","note","window","confirm","sidebarContainer","newNoteBtn","e","target","value","newNoteSubmitBtn","map","_note","_index"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport styles from \"./styles\";\nimport List from \"@material-ui/core/List\";\nimport { Divider, Button } from \"@material-ui/core\";\nimport SideBarItem from \"../sideBarItem/SideBarItem\";\n\nconst SideBar = ({ notes, classes, selectedNoteIndex }) => {\n  const [addingNote, setAddingNote] = useState(false);\n  const [title, setTitle] = useState(null);\n\n  const newNoteBtnClick = () => {\n    setAddingNote(!addingNote);\n    setTitle(null);\n  };\n\n  const updateTitle = (txt) => {\n    setTitle(txt);\n  };\n\n  const newNote = () => {\n    console.log(addingNote, title);\n  };\n\n  const selectNote = (n, i) => {\n    console.log(\"Select Note\");\n  };\n\n  const deleteNote = (note) => {\n    if (window.confirm(`Are you sure you want to delete: ${note.title}`)) {\n      console.log(\"Delete note\");\n    }\n  };\n\n  return (\n    <div className={classes.sidebarContainer}>\n      <Button onClick={newNoteBtnClick} className={classes.newNoteBtn}>\n        {addingNote ? \"Cancel\" : \"New Note\"}\n      </Button>\n      {addingNote ? (\n        <div>\n          <input\n            type=\"text\"\n            placeholder=\"Enter note title\"\n            onKeyUp={(e) => updateTitle(e.target.value)}\n          />\n          <Button className={classes.newNoteSubmitBtn} onClick={newNote}>\n            Submit Note\n          </Button>\n        </div>\n      ) : null}\n      <List>\n        {notes.map((_note, _index) => {\n          return (\n            <div key={_index}>\n              <SideBarItem\n                _note={_note}\n                _index={_index}\n                selectedNoteIndex={selectedNoteIndex}\n                selectNote={selectNote}\n                deleteNote={deleteNote}\n              />\n              <Divider></Divider>\n            </div>\n          );\n        })}\n      </List>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(SideBar);\n"]},"metadata":{},"sourceType":"module"}