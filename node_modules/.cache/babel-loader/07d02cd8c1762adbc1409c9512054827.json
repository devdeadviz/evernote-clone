{"ast":null,"code":"var _jsxFileName = \"/media/devdeadviz/1AAA83FAAA83D125/Projects/evernote-clone/src/sideBar/SideBar.js\";\nimport React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport styles from \"./styles\";\nimport List from \"@material-ui/core/List\";\nimport { Divider, Button } from \"@material-ui/core\";\nimport SideBarItem from \"../sideBarItem/SideBarItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SideBar = ({\n  notes,\n  classes,\n  selectedNoteIndex,\n  selectNote,\n  deleteNote,\n  newNote,\n  title,\n  setTitle,\n  addingNote,\n  setAddingNote\n}) => {\n  const newNoteBtnClick = () => {\n    setAddingNote(!addingNote);\n    setTitle(null);\n  };\n\n  const updateTitle = txt => {\n    setTitle(txt);\n  };\n\n  if (notes) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.sidebarContainer,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: newNoteBtnClick,\n        className: classes.newNoteBtn,\n        children: addingNote ? \"Cancel\" : \"New Note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), addingNote ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter note title\",\n          onKeyUp: e => updateTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: classes.newNoteSubmitBtn,\n          onClick: newNote(title),\n          children: \"Submit Note\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this) : null, /*#__PURE__*/_jsxDEV(List, {\n        children: notes.map((_note, _index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(SideBarItem, {\n              _note: _note,\n              _index: _index,\n              selectedNoteIndex: selectedNoteIndex,\n              selectNote: selectNote,\n              deleteNote: deleteNote\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this)]\n          }, _index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 12\n    }, this);\n  }\n};\n\n_c = SideBar;\nexport default withStyles(styles)(SideBar);\n\nvar _c;\n\n$RefreshReg$(_c, \"SideBar\");","map":{"version":3,"sources":["/media/devdeadviz/1AAA83FAAA83D125/Projects/evernote-clone/src/sideBar/SideBar.js"],"names":["React","withStyles","styles","List","Divider","Button","SideBarItem","SideBar","notes","classes","selectedNoteIndex","selectNote","deleteNote","newNote","title","setTitle","addingNote","setAddingNote","newNoteBtnClick","updateTitle","txt","sidebarContainer","newNoteBtn","e","target","value","newNoteSubmitBtn","map","_note","_index"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAASC,OAAT,EAAkBC,MAAlB,QAAgC,mBAAhC;AACA,OAAOC,WAAP,MAAwB,4BAAxB;;;AAEA,MAAMC,OAAO,GAAG,CAAC;AACfC,EAAAA,KADe;AAEfC,EAAAA,OAFe;AAGfC,EAAAA,iBAHe;AAIfC,EAAAA,UAJe;AAKfC,EAAAA,UALe;AAMfC,EAAAA,OANe;AAOfC,EAAAA,KAPe;AAQfC,EAAAA,QARe;AASfC,EAAAA,UATe;AAUfC,EAAAA;AAVe,CAAD,KAWV;AACJ,QAAMC,eAAe,GAAG,MAAM;AAC5BD,IAAAA,aAAa,CAAC,CAACD,UAAF,CAAb;AACAD,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,GAHD;;AAKA,QAAMI,WAAW,GAAIC,GAAD,IAAS;AAC3BL,IAAAA,QAAQ,CAACK,GAAD,CAAR;AACD,GAFD;;AAIA,MAAIZ,KAAJ,EAAW;AACT,wBACE;AAAK,MAAA,SAAS,EAAEC,OAAO,CAACY,gBAAxB;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEH,eAAjB;AAAkC,QAAA,SAAS,EAAET,OAAO,CAACa,UAArD;AAAA,kBACGN,UAAU,GAAG,QAAH,GAAc;AAD3B;AAAA;AAAA;AAAA;AAAA,cADF,EAIGA,UAAU,gBACT;AAAA,gCACE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,WAAW,EAAC,kBAFd;AAGE,UAAA,OAAO,EAAGO,CAAD,IAAOJ,WAAW,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV;AAH7B;AAAA;AAAA;AAAA;AAAA,gBADF,eAME,QAAC,MAAD;AACE,UAAA,SAAS,EAAEhB,OAAO,CAACiB,gBADrB;AAEE,UAAA,OAAO,EAAEb,OAAO,CAACC,KAAD,CAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA,cADS,GAcP,IAlBN,eAmBE,QAAC,IAAD;AAAA,kBACGN,KAAK,CAACmB,GAAN,CAAU,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC5B,8BACE;AAAA,oCACE,QAAC,WAAD;AACE,cAAA,KAAK,EAAED,KADT;AAEE,cAAA,MAAM,EAAEC,MAFV;AAGE,cAAA,iBAAiB,EAAEnB,iBAHrB;AAIE,cAAA,UAAU,EAAEC,UAJd;AAKE,cAAA,UAAU,EAAEC;AALd;AAAA;AAAA;AAAA;AAAA,oBADF,eAQE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,oBARF;AAAA,aAAUiB,MAAV;AAAA;AAAA;AAAA;AAAA,kBADF;AAYD,SAbA;AADH;AAAA;AAAA;AAAA;AAAA,cAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAsCD,GAvCD,MAuCO;AACL,wBAAO;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;AACF,CA/DD;;KAAMtB,O;AAiEN,eAAeN,UAAU,CAACC,MAAD,CAAV,CAAmBK,OAAnB,CAAf","sourcesContent":["import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport styles from \"./styles\";\nimport List from \"@material-ui/core/List\";\nimport { Divider, Button } from \"@material-ui/core\";\nimport SideBarItem from \"../sideBarItem/SideBarItem\";\n\nconst SideBar = ({\n  notes,\n  classes,\n  selectedNoteIndex,\n  selectNote,\n  deleteNote,\n  newNote,\n  title,\n  setTitle,\n  addingNote,\n  setAddingNote,\n}) => {\n  const newNoteBtnClick = () => {\n    setAddingNote(!addingNote);\n    setTitle(null);\n  };\n\n  const updateTitle = (txt) => {\n    setTitle(txt);\n  };\n\n  if (notes) {\n    return (\n      <div className={classes.sidebarContainer}>\n        <Button onClick={newNoteBtnClick} className={classes.newNoteBtn}>\n          {addingNote ? \"Cancel\" : \"New Note\"}\n        </Button>\n        {addingNote ? (\n          <div>\n            <input\n              type=\"text\"\n              placeholder=\"Enter note title\"\n              onKeyUp={(e) => updateTitle(e.target.value)}\n            />\n            <Button\n              className={classes.newNoteSubmitBtn}\n              onClick={newNote(title)}\n            >\n              Submit Note\n            </Button>\n          </div>\n        ) : null}\n        <List>\n          {notes.map((_note, _index) => {\n            return (\n              <div key={_index}>\n                <SideBarItem\n                  _note={_note}\n                  _index={_index}\n                  selectedNoteIndex={selectedNoteIndex}\n                  selectNote={selectNote}\n                  deleteNote={deleteNote}\n                />\n                <Divider></Divider>\n              </div>\n            );\n          })}\n        </List>\n      </div>\n    );\n  } else {\n    return <div></div>;\n  }\n};\n\nexport default withStyles(styles)(SideBar);\n"]},"metadata":{},"sourceType":"module"}