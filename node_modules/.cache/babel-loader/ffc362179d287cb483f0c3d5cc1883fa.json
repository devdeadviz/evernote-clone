{"ast":null,"code":"var _jsxFileName = \"/media/devdeadviz/1AAA83FAAA83D125/Projects/evernote-clone/src/editor/Editor.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from \"react\";\nimport ReactQuill from \"react-quill\";\nimport debounce from \"../hooks/helpers\";\nimport BorderColorIcon from \"@material-ui/icons/BorderColor\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport styles from \"./styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Editor = ({\n  classes,\n  selectedNote,\n  noteUpdate\n}) => {\n  _s();\n\n  const [updateBody, setUpdateBody] = React.useState(selectedNote === null || selectedNote === void 0 ? void 0 : selectedNote.body);\n  const [updateTitle, setUpdateTitle] = React.useState(selectedNote === null || selectedNote === void 0 ? void 0 : selectedNote.title);\n  React.useEffect(() => {\n    setUpdateTitle(selectedNote === null || selectedNote === void 0 ? void 0 : selectedNote.title);\n    setUpdateBody(selectedNote === null || selectedNote === void 0 ? void 0 : selectedNote.body);\n  }, [selectedNote]); // console.log(\"updatedText\", updateBody);\n  // console.log(\"updatedTitle\", updateTitle);\n\n  const update = React.useCallback(debounce(() => {\n    noteUpdate(selectedNote.id, updateTitle, updateBody);\n  }, 1500), [updateBody, updateTitle]); // const updateTitle = async (txt) => {\n  //   await setTitle(txt);\n  //   update();\n  // };\n  // useEffect(() => {\n  //   setText(selectedNote.body);\n  //   setTitle(selectedNote.title);\n  //   setId(selectedNote.id);\n  // }, [selectedNote, setId, setText, setTitle]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.editorContainer,\n    children: [/*#__PURE__*/_jsxDEV(BorderColorIcon, {\n      className: classes.editIcon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: classes.titleInput,\n      placeholder: \"Note title...\",\n      value: updateTitle ? updateTitle : \"\",\n      onChange: e => {\n        setUpdateTitle(e.target.value);\n        update();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactQuill, {\n      value: updateBody,\n      onChange: value => {\n        setUpdateBody(value);\n        update();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Editor, \"zjRGwJZC0lPft4NpvdgXEokpPno=\");\n\n_c = Editor;\nexport default withStyles(styles)(Editor);\n\nvar _c;\n\n$RefreshReg$(_c, \"Editor\");","map":{"version":3,"sources":["/media/devdeadviz/1AAA83FAAA83D125/Projects/evernote-clone/src/editor/Editor.js"],"names":["React","useEffect","useRef","ReactQuill","debounce","BorderColorIcon","withStyles","styles","Editor","classes","selectedNote","noteUpdate","updateBody","setUpdateBody","useState","body","updateTitle","setUpdateTitle","title","update","useCallback","id","editorContainer","editIcon","titleInput","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,YAAX;AAAyBC,EAAAA;AAAzB,CAAD,KAA2C;AAAA;;AACxD,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8Bb,KAAK,CAACc,QAAN,CAAeJ,YAAf,aAAeA,YAAf,uBAAeA,YAAY,CAAEK,IAA7B,CAApC;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCjB,KAAK,CAACc,QAAN,CAAeJ,YAAf,aAAeA,YAAf,uBAAeA,YAAY,CAAEQ,KAA7B,CAAtC;AAEAlB,EAAAA,KAAK,CAACC,SAAN,CAAgB,MAAM;AACpBgB,IAAAA,cAAc,CAACP,YAAD,aAACA,YAAD,uBAACA,YAAY,CAAEQ,KAAf,CAAd;AACAL,IAAAA,aAAa,CAACH,YAAD,aAACA,YAAD,uBAACA,YAAY,CAAEK,IAAf,CAAb;AACD,GAHD,EAGG,CAACL,YAAD,CAHH,EAJwD,CASxD;AACA;;AAEA,QAAMS,MAAM,GAAGnB,KAAK,CAACoB,WAAN,CACbhB,QAAQ,CAAC,MAAM;AACbO,IAAAA,UAAU,CAACD,YAAY,CAACW,EAAd,EAAkBL,WAAlB,EAA+BJ,UAA/B,CAAV;AACD,GAFO,EAEL,IAFK,CADK,EAIb,CAACA,UAAD,EAAaI,WAAb,CAJa,CAAf,CAZwD,CAmBxD;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAEP,OAAO,CAACa,eAAxB;AAAA,4BACE,QAAC,eAAD;AAAiB,MAAA,SAAS,EAAEb,OAAO,CAACc;AAApC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AACE,MAAA,SAAS,EAAEd,OAAO,CAACe,UADrB;AAEE,MAAA,WAAW,EAAC,eAFd;AAGE,MAAA,KAAK,EAAER,WAAW,GAAGA,WAAH,GAAiB,EAHrC;AAIE,MAAA,QAAQ,EAAGS,CAAD,IAAO;AACfR,QAAAA,cAAc,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AACAR,QAAAA,MAAM;AACP;AAPH;AAAA;AAAA;AAAA;AAAA,YAFF,eAWE,QAAC,UAAD;AACE,MAAA,KAAK,EAAEP,UADT;AAEE,MAAA,QAAQ,EAAGe,KAAD,IAAW;AACnBd,QAAAA,aAAa,CAACc,KAAD,CAAb;AACAR,QAAAA,MAAM;AACP;AALH;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CAnDD;;GAAMX,M;;KAAAA,M;AAqDN,eAAeF,UAAU,CAACC,MAAD,CAAV,CAAmBC,MAAnB,CAAf","sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport ReactQuill from \"react-quill\";\nimport debounce from \"../hooks/helpers\";\nimport BorderColorIcon from \"@material-ui/icons/BorderColor\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport styles from \"./styles\";\n\nconst Editor = ({ classes, selectedNote, noteUpdate }) => {\n  const [updateBody, setUpdateBody] = React.useState(selectedNote?.body);\n  const [updateTitle, setUpdateTitle] = React.useState(selectedNote?.title);\n\n  React.useEffect(() => {\n    setUpdateTitle(selectedNote?.title);\n    setUpdateBody(selectedNote?.body);\n  }, [selectedNote]);\n\n  // console.log(\"updatedText\", updateBody);\n  // console.log(\"updatedTitle\", updateTitle);\n\n  const update = React.useCallback(\n    debounce(() => {\n      noteUpdate(selectedNote.id, updateTitle, updateBody);\n    }, 1500),\n    [updateBody, updateTitle]\n  );\n\n  // const updateTitle = async (txt) => {\n  //   await setTitle(txt);\n  //   update();\n  // };\n\n  // useEffect(() => {\n  //   setText(selectedNote.body);\n  //   setTitle(selectedNote.title);\n  //   setId(selectedNote.id);\n  // }, [selectedNote, setId, setText, setTitle]);\n\n  return (\n    <div className={classes.editorContainer}>\n      <BorderColorIcon className={classes.editIcon}></BorderColorIcon>\n      <input\n        className={classes.titleInput}\n        placeholder=\"Note title...\"\n        value={updateTitle ? updateTitle : \"\"}\n        onChange={(e) => {\n          setUpdateTitle(e.target.value);\n          update();\n        }}\n      ></input>\n      <ReactQuill\n        value={updateBody}\n        onChange={(value) => {\n          setUpdateBody(value);\n          update();\n        }}\n      ></ReactQuill>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(Editor);\n"]},"metadata":{},"sourceType":"module"}