{"ast":null,"code":"var _jsxFileName = \"/media/devdeadviz/1AAA83FAAA83D125/Projects/evernote-clone/src/editor/Editor.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport ReactQuill from \"react-quill\";\nimport Debounce from \"../hooks/helpers\";\nimport BorderColorIcon from \"@material-ui/icons/BorderColor\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport styles from \"./styles\";\nimport firestore from \"../firebase/firebase\";\nimport { debounce } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Editor = ({\n  classes,\n  notes,\n  setNotes,\n  selectedNote,\n  setSelectedNote,\n  selectedNoteIndex,\n  setSelectedNoteIndex\n}) => {\n  _s();\n\n  const [text, setText] = useState(null);\n  const [title, setTitle] = useState(null);\n  const [id, setId] = useState(null); // const updateBodyDebounce = Debounce(text, 1500);\n  // const updateTitleDebounce = Debounce(title, 1500);\n  // useEffect(() => {\n  //   setTitle(selectedNote.title);\n  // }, [selectedNote]);\n  // useEffect(() => {\n  //   setText(selectedNote.body);\n  // }, [selectedNote]);\n  // useEffect(() => {\n  //   if (updateBodyDebounce) {\n  //     firestore.collection(\"notes\").doc(selectedNote.id).update({\n  //       body: text,\n  //     });\n  //   }\n  // }, [updateBodyDebounce]);\n  // useEffect(() => {\n  //   firestore.collection(\"notes\").doc(selectedNote.id).update({\n  //     title: title,\n  //   });\n  // }, [updateTitleDebounce]);\n  // const updateNote = (e) => {\n  //   setText(e);\n  // };\n  // const updateTitle = (e) => {\n  //   setTitle(e.target.value);\n  // };\n\n  const updateBody = async val => {\n    await setText(val);\n    update();\n  };\n\n  const update = debounce(() => {\n    console.log(\"Updating DB\");\n  }, 1500);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.editorContainer,\n    children: /*#__PURE__*/_jsxDEV(ReactQuill, {\n      value: text,\n      onChange: updateBody\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Editor, \"ITMhuYylGLdspAdeM63wJb2nRD8=\");\n\n_c = Editor;\nexport default withStyles(styles)(Editor);\n\nvar _c;\n\n$RefreshReg$(_c, \"Editor\");","map":{"version":3,"sources":["/media/devdeadviz/1AAA83FAAA83D125/Projects/evernote-clone/src/editor/Editor.js"],"names":["React","useState","useEffect","ReactQuill","Debounce","BorderColorIcon","withStyles","styles","firestore","debounce","Editor","classes","notes","setNotes","selectedNote","setSelectedNote","selectedNoteIndex","setSelectedNoteIndex","text","setText","title","setTitle","id","setId","updateBody","val","update","console","log","editorContainer"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,SAASC,QAAT,QAAyB,mBAAzB;;;AAEA,MAAMC,MAAM,GAAG,CAAC;AACdC,EAAAA,OADc;AAEdC,EAAAA,KAFc;AAGdC,EAAAA,QAHc;AAIdC,EAAAA,YAJc;AAKdC,EAAAA,eALc;AAMdC,EAAAA,iBANc;AAOdC,EAAAA;AAPc,CAAD,KAQT;AAAA;;AACJ,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBlB,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACmB,KAAD,EAAQC,QAAR,IAAoBpB,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACqB,EAAD,EAAKC,KAAL,IAActB,QAAQ,CAAC,IAAD,CAA5B,CAHI,CAIJ;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMuB,UAAU,GAAG,MAAOC,GAAP,IAAe;AAChC,UAAMN,OAAO,CAACM,GAAD,CAAb;AACAC,IAAAA,MAAM;AACP,GAHD;;AAKA,QAAMA,MAAM,GAAGjB,QAAQ,CAAC,MAAM;AAC5BkB,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACD,GAFsB,EAEpB,IAFoB,CAAvB;AAIA,sBACE;AAAK,IAAA,SAAS,EAAEjB,OAAO,CAACkB,eAAxB;AAAA,2BACE,QAAC,UAAD;AAAY,MAAA,KAAK,EAAEX,IAAnB;AAAyB,MAAA,QAAQ,EAAEM;AAAnC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA1DD;;GAAMd,M;;KAAAA,M;AA4DN,eAAeJ,UAAU,CAACC,MAAD,CAAV,CAAmBG,MAAnB,CAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ReactQuill from \"react-quill\";\nimport Debounce from \"../hooks/helpers\";\nimport BorderColorIcon from \"@material-ui/icons/BorderColor\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport styles from \"./styles\";\nimport firestore from \"../firebase/firebase\";\nimport { debounce } from \"@material-ui/core\";\n\nconst Editor = ({\n  classes,\n  notes,\n  setNotes,\n  selectedNote,\n  setSelectedNote,\n  selectedNoteIndex,\n  setSelectedNoteIndex,\n}) => {\n  const [text, setText] = useState(null);\n  const [title, setTitle] = useState(null);\n  const [id, setId] = useState(null);\n  // const updateBodyDebounce = Debounce(text, 1500);\n  // const updateTitleDebounce = Debounce(title, 1500);\n\n  // useEffect(() => {\n  //   setTitle(selectedNote.title);\n  // }, [selectedNote]);\n\n  // useEffect(() => {\n  //   setText(selectedNote.body);\n  // }, [selectedNote]);\n\n  // useEffect(() => {\n  //   if (updateBodyDebounce) {\n  //     firestore.collection(\"notes\").doc(selectedNote.id).update({\n  //       body: text,\n  //     });\n  //   }\n  // }, [updateBodyDebounce]);\n\n  // useEffect(() => {\n  //   firestore.collection(\"notes\").doc(selectedNote.id).update({\n  //     title: title,\n  //   });\n  // }, [updateTitleDebounce]);\n\n  // const updateNote = (e) => {\n  //   setText(e);\n  // };\n  // const updateTitle = (e) => {\n  //   setTitle(e.target.value);\n  // };\n\n  const updateBody = async (val) => {\n    await setText(val);\n    update();\n  };\n\n  const update = debounce(() => {\n    console.log(\"Updating DB\");\n  }, 1500);\n\n  return (\n    <div className={classes.editorContainer}>\n      <ReactQuill value={text} onChange={updateBody}></ReactQuill>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(Editor);\n"]},"metadata":{},"sourceType":"module"}