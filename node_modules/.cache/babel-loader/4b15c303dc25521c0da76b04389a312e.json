{"ast":null,"code":"var _jsxFileName = \"/media/devdeadviz/1AAA83FAAA83D125/Projects/evernote-clone/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport firebase from \"./firebase/firebase\";\nimport SideBar from \"./sideBar/SideBar\";\nimport Editor from \"./editor/Editor\";\nimport { timestamp } from \"./firebase/firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [selectedNote, setSelectedNote] = useState(null);\n  const [notes, setNotes] = useState([]);\n  const [addingNote, setAddingNote] = useState(false);\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\"); // n -> note, i -> index\n\n  const selectNote = noteId => {\n    const snote = notes.find(note => note.id === noteId);\n    setSelectedNote(snote);\n  }; // e -> note\n\n\n  const deleteNote = async noteId => {\n    const mnote = notes.find(_n => _n.id === noteId);\n\n    if (window.confirm(`Are you sure you want to delete: ${mnote.title}`)) {\n      firebase.firestore().collection(\"notes\").doc(noteId).delete();\n    }\n  };\n\n  const noteUpdate = (id, updateTitle, updateBody) => {\n    if (id) {\n      firebase.firestore().collection(\"notes\").doc(id).update({\n        title: updateTitle,\n        body: updateBody,\n        timestamp: timestamp\n      });\n    }\n  };\n\n  useEffect(() => {\n    firebase.firestore().collection(\"notes\").onSnapshot(serverUpdate => {\n      const notes = serverUpdate.docs.map(_doc => {\n        const data = _doc.data();\n\n        data[\"id\"] = _doc.id;\n        return data;\n      });\n      setNotes(notes);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(SideBar, {\n      notes: notes,\n      body: body,\n      setBody: setBody,\n      selectNote: selectNote,\n      deleteNote: deleteNote,\n      addingNote: addingNote,\n      setAddingNote: setAddingNote,\n      title: title,\n      setTitle: setTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), selectedNote && /*#__PURE__*/_jsxDEV(Editor, {\n      selectedNote: selectedNote,\n      noteUpdate: noteUpdate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"kMrvdHOm2ysIIZAYIdjBKX6JlEs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/media/devdeadviz/1AAA83FAAA83D125/Projects/evernote-clone/src/App.js"],"names":["React","useState","useEffect","firebase","SideBar","Editor","timestamp","App","selectedNote","setSelectedNote","notes","setNotes","addingNote","setAddingNote","title","setTitle","body","setBody","selectNote","noteId","snote","find","note","id","deleteNote","mnote","_n","window","confirm","firestore","collection","doc","delete","noteUpdate","updateTitle","updateBody","update","onSnapshot","serverUpdate","docs","map","_doc","data"],"mappings":"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","sourcesContent":["import \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport firebase from \"./firebase/firebase\";\nimport SideBar from \"./sideBar/SideBar\";\nimport Editor from \"./editor/Editor\";\nimport { timestamp } from \"./firebase/firebase\";\n\nconst App = () => {\n  const [selectedNote, setSelectedNote] = useState(null);\n  const [notes, setNotes] = useState([]);\n  const [addingNote, setAddingNote] = useState(false);\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n\n  // n -> note, i -> index\n  const selectNote = (noteId) => {\n    const snote = notes.find((note) => note.id === noteId);\n    setSelectedNote(snote);\n  };\n\n  // e -> note\n  const deleteNote = async (noteId) => {\n    const mnote = notes.find((_n) => _n.id === noteId);\n    if (window.confirm(`Are you sure you want to delete: ${mnote.title}`)) {\n      firebase.firestore().collection(\"notes\").doc(noteId).delete();\n    }\n  };\n\n  const noteUpdate = (id, updateTitle, updateBody) => {\n    if (id) {\n      firebase.firestore().collection(\"notes\").doc(id).update({\n        title: updateTitle,\n        body: updateBody,\n        timestamp: timestamp,\n      });\n    }\n  };\n\n  useEffect(() => {\n    firebase\n      .firestore()\n      .collection(\"notes\")\n      .onSnapshot((serverUpdate) => {\n        const notes = serverUpdate.docs.map((_doc) => {\n          const data = _doc.data();\n          data[\"id\"] = _doc.id;\n          return data;\n        });\n        setNotes(notes);\n      });\n  }, []);\n\n  return (\n    <div className=\"app-container\">\n      <SideBar\n        notes={notes}\n        body={body}\n        setBody={setBody}\n        selectNote={selectNote}\n        deleteNote={deleteNote}\n        addingNote={addingNote}\n        setAddingNote={setAddingNote}\n        title={title}\n        setTitle={setTitle}\n      />\n      {selectedNote && (\n        <Editor selectedNote={selectedNote} noteUpdate={noteUpdate} />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}