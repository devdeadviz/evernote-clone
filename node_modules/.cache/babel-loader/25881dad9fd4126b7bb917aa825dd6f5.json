{"ast":null,"code":"var _jsxFileName = \"/media/devdeadviz/1AAA83FAAA83D125/Projects/evernote-clone/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport firebase from \"./firebase/firebase\";\nimport SideBar from \"./sideBar/SideBar\";\nimport Editor from \"./editor/Editor\";\nimport { timestamp } from \"./firebase/firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [selectedNoteIndex, setSelectedNoteIndex] = useState(null);\n  const [selectedNote, setSelectedNote] = useState(null);\n  const [notes, setNotes] = useState(null);\n  const [addingNote, setAddingNote] = useState(false);\n  const [title, setTitle] = useState(null);\n  const [text, setText] = useState(null);\n  const [id, setId] = useState(null); // n -> note, i -> index\n\n  const selectNote = (n, i, a) => {\n    setSelectedNote(n);\n    setSelectedNoteIndex(i);\n    setId(a);\n  }; // e -> note\n\n\n  const deleteNote = e => {\n    if (window.confirm(`Are you sure you want to delete: ${e.title}`)) {\n      console.log(\"Delete note\");\n    }\n  };\n\n  const newNote = () => {\n    console.log(addingNote, title);\n  };\n\n  const noteUpdate = (id, noteObj) => {\n    console.log(id, noteObj); // firebase.firestore().collection(\"notes\").doc(id).update({\n    //   title: noteObj.title,\n    //   body: noteObj.body,\n    //   timestamp: timestamp,\n    // });\n  };\n\n  useEffect(() => {\n    firebase.firestore().collection(\"notes\").onSnapshot(serverUpdate => {\n      const notes = serverUpdate.docs.map(_doc => {\n        const data = _doc.data();\n\n        data[\"id\"] = _doc.id;\n        return data;\n      });\n      console.log(notes);\n      setNotes(notes);\n    });\n    return console.log(\"\");\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(SideBar, {\n      notes: notes,\n      selectedNoteIndex: selectedNoteIndex,\n      selectNote: selectNote,\n      deleteNote: deleteNote,\n      newNote: newNote,\n      addingNote: addingNote,\n      setAddingNote: setAddingNote,\n      title: title,\n      setTitle: setTitle,\n      id: id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), selectedNote && /*#__PURE__*/_jsxDEV(Editor, {\n      notes: notes,\n      setNotes: setNotes,\n      selectedNote: selectedNote,\n      setSelectedNote: setSelectedNote,\n      selectedNoteIndex: selectedNoteIndex,\n      setSelectedNoteIndex: setSelectedNoteIndex,\n      title: title,\n      setTitle: setTitle,\n      noteUpdate: noteUpdate,\n      id: id,\n      setId: setId,\n      text: text,\n      setText: setText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"GzXKbfqiT0CLMWK18vLMwZD2oQg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/media/devdeadviz/1AAA83FAAA83D125/Projects/evernote-clone/src/App.js"],"names":["React","useState","useEffect","firebase","SideBar","Editor","timestamp","App","selectedNoteIndex","setSelectedNoteIndex","selectedNote","setSelectedNote","notes","setNotes","addingNote","setAddingNote","title","setTitle","text","setText","id","setId","selectNote","n","i","a","deleteNote","e","window","confirm","console","log","newNote","noteUpdate","noteObj","firestore","collection","onSnapshot","serverUpdate","docs","map","_doc","data"],"mappings":"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","sourcesContent":["import \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport firebase from \"./firebase/firebase\";\nimport SideBar from \"./sideBar/SideBar\";\nimport Editor from \"./editor/Editor\";\nimport { timestamp } from \"./firebase/firebase\";\n\nconst App = () => {\n  const [selectedNoteIndex, setSelectedNoteIndex] = useState(null);\n  const [selectedNote, setSelectedNote] = useState(null);\n  const [notes, setNotes] = useState(null);\n  const [addingNote, setAddingNote] = useState(false);\n  const [title, setTitle] = useState(null);\n  const [text, setText] = useState(null);\n  const [id, setId] = useState(null);\n\n  // n -> note, i -> index\n  const selectNote = (n, i, a) => {\n    setSelectedNote(n);\n    setSelectedNoteIndex(i);\n    setId(a);\n  };\n\n  // e -> note\n  const deleteNote = (e) => {\n    if (window.confirm(`Are you sure you want to delete: ${e.title}`)) {\n      console.log(\"Delete note\");\n    }\n  };\n\n  const newNote = () => {\n    console.log(addingNote, title);\n  };\n\n  const noteUpdate = (id, noteObj) => {\n    console.log(id, noteObj);\n    // firebase.firestore().collection(\"notes\").doc(id).update({\n    //   title: noteObj.title,\n    //   body: noteObj.body,\n    //   timestamp: timestamp,\n    // });\n  };\n\n  useEffect(() => {\n    firebase\n      .firestore()\n      .collection(\"notes\")\n      .onSnapshot((serverUpdate) => {\n        const notes = serverUpdate.docs.map((_doc) => {\n          const data = _doc.data();\n          data[\"id\"] = _doc.id;\n          return data;\n        });\n        console.log(notes);\n        setNotes(notes);\n      });\n    return console.log(\"\");\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <SideBar\n        notes={notes}\n        selectedNoteIndex={selectedNoteIndex}\n        selectNote={selectNote}\n        deleteNote={deleteNote}\n        newNote={newNote}\n        addingNote={addingNote}\n        setAddingNote={setAddingNote}\n        title={title}\n        setTitle={setTitle}\n        id={id}\n      />\n      {selectedNote && (\n        <Editor\n          notes={notes}\n          setNotes={setNotes}\n          selectedNote={selectedNote}\n          setSelectedNote={setSelectedNote}\n          selectedNoteIndex={selectedNoteIndex}\n          setSelectedNoteIndex={setSelectedNoteIndex}\n          title={title}\n          setTitle={setTitle}\n          noteUpdate={noteUpdate}\n          id={id}\n          setId={setId}\n          text={text}\n          setText={setText}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}