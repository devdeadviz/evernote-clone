{"ast":null,"code":"var _jsxFileName = \"/media/devdeadviz/1AAA83FAAA83D125/Projects/evernote-clone/src/editor/Editor.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from \"react\";\nimport ReactQuill from \"react-quill\";\nimport debounce from \"../hooks/helpers\";\nimport BorderColorIcon from \"@material-ui/icons/BorderColor\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport styles from \"./styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Editor = ({\n  classes,\n  notes,\n  setNotes,\n  selectedNote,\n  setSelectedNote,\n  selectedNoteIndex,\n  setSelectedNoteIndex,\n  title,\n  setTitle,\n  noteUpdate,\n  id,\n  setId,\n  text,\n  setText\n}) => {\n  _s();\n\n  const updateBody = async val => {\n    await setText(val);\n    update();\n  };\n\n  const update = useRef(debounce(() => {\n    noteUpdate(id, {\n      title: selectedNote.title,\n      body: selectedNote.body\n    });\n  }, 1500)).current;\n  useEffect(() => {\n    setText(selectedNote.body);\n    setTitle(selectedNote.title);\n    setId(selectedNote.id);\n  }, [selectedNote.body]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.editorContainer,\n    children: /*#__PURE__*/_jsxDEV(ReactQuill, {\n      value: text,\n      onChange: updateBody\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Editor, \"HI2rmkDStaXKpoO1B+Q8/ihvhA0=\");\n\n_c = Editor;\nexport default withStyles(styles)(Editor);\n\nvar _c;\n\n$RefreshReg$(_c, \"Editor\");","map":{"version":3,"sources":["/media/devdeadviz/1AAA83FAAA83D125/Projects/evernote-clone/src/editor/Editor.js"],"names":["React","useEffect","useRef","ReactQuill","debounce","BorderColorIcon","withStyles","styles","Editor","classes","notes","setNotes","selectedNote","setSelectedNote","selectedNoteIndex","setSelectedNoteIndex","title","setTitle","noteUpdate","id","setId","text","setText","updateBody","val","update","body","current","editorContainer"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AAEA,MAAMC,MAAM,GAAG,CAAC;AACdC,EAAAA,OADc;AAEdC,EAAAA,KAFc;AAGdC,EAAAA,QAHc;AAIdC,EAAAA,YAJc;AAKdC,EAAAA,eALc;AAMdC,EAAAA,iBANc;AAOdC,EAAAA,oBAPc;AAQdC,EAAAA,KARc;AASdC,EAAAA,QATc;AAUdC,EAAAA,UAVc;AAWdC,EAAAA,EAXc;AAYdC,EAAAA,KAZc;AAadC,EAAAA,IAbc;AAcdC,EAAAA;AAdc,CAAD,KAeT;AAAA;;AACJ,QAAMC,UAAU,GAAG,MAAOC,GAAP,IAAe;AAChC,UAAMF,OAAO,CAACE,GAAD,CAAb;AACAC,IAAAA,MAAM;AACP,GAHD;;AAKA,QAAMA,MAAM,GAAGvB,MAAM,CACnBE,QAAQ,CAAC,MAAM;AACbc,IAAAA,UAAU,CAACC,EAAD,EAAK;AACbH,MAAAA,KAAK,EAAEJ,YAAY,CAACI,KADP;AAEbU,MAAAA,IAAI,EAAEd,YAAY,CAACc;AAFN,KAAL,CAAV;AAID,GALO,EAKL,IALK,CADW,CAAN,CAObC,OAPF;AASA1B,EAAAA,SAAS,CAAC,MAAM;AACdqB,IAAAA,OAAO,CAACV,YAAY,CAACc,IAAd,CAAP;AACAT,IAAAA,QAAQ,CAACL,YAAY,CAACI,KAAd,CAAR;AACAI,IAAAA,KAAK,CAACR,YAAY,CAACO,EAAd,CAAL;AACD,GAJQ,EAIN,CAACP,YAAY,CAACc,IAAd,CAJM,CAAT;AAMA,sBACE;AAAK,IAAA,SAAS,EAAEjB,OAAO,CAACmB,eAAxB;AAAA,2BACE,QAAC,UAAD;AAAY,MAAA,KAAK,EAAEP,IAAnB;AAAyB,MAAA,QAAQ,EAAEE;AAAnC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAzCD;;GAAMf,M;;KAAAA,M;AA2CN,eAAeF,UAAU,CAACC,MAAD,CAAV,CAAmBC,MAAnB,CAAf","sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport ReactQuill from \"react-quill\";\nimport debounce from \"../hooks/helpers\";\nimport BorderColorIcon from \"@material-ui/icons/BorderColor\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport styles from \"./styles\";\n\nconst Editor = ({\n  classes,\n  notes,\n  setNotes,\n  selectedNote,\n  setSelectedNote,\n  selectedNoteIndex,\n  setSelectedNoteIndex,\n  title,\n  setTitle,\n  noteUpdate,\n  id,\n  setId,\n  text,\n  setText,\n}) => {\n  const updateBody = async (val) => {\n    await setText(val);\n    update();\n  };\n\n  const update = useRef(\n    debounce(() => {\n      noteUpdate(id, {\n        title: selectedNote.title,\n        body: selectedNote.body,\n      });\n    }, 1500)\n  ).current;\n\n  useEffect(() => {\n    setText(selectedNote.body);\n    setTitle(selectedNote.title);\n    setId(selectedNote.id);\n  }, [selectedNote.body]);\n\n  return (\n    <div className={classes.editorContainer}>\n      <ReactQuill value={text} onChange={updateBody}></ReactQuill>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(Editor);\n"]},"metadata":{},"sourceType":"module"}