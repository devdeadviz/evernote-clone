{"ast":null,"code":"var _jsxFileName = \"/media/devdeadviz/1AAA83FAAA83D125/Projects/evernote-clone/src/sideBar/SideBar.js\";\nimport React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport styles from \"./styles\";\nimport List from \"@material-ui/core/List\";\nimport { Divider, Button } from \"@material-ui/core\";\nimport SideBarItem from \"../sideBarItem/SideBarItem\";\nimport firebase from \"../firebase/firebase\";\nimport { timestamp } from \"../firebase/firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SideBar = ({\n  notes,\n  classes,\n  selectNote,\n  deleteNote,\n  title,\n  setTitle,\n  addingNote,\n  setAddingNote,\n  body\n}) => {\n  const newNoteBtnClick = () => {\n    setAddingNote(!addingNote);\n    setTitle(\"\");\n  };\n\n  const createNewNote = async () => {\n    await firebase.firestore().collection(\"notes\").add({\n      title: title,\n      body: body || \"\",\n      timestamp: timestamp\n    });\n    setTitle(\"\");\n    setAddingNote(false);\n  };\n\n  if (notes) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.sidebarContainer,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: newNoteBtnClick,\n        className: classes.newNoteBtn,\n        children: addingNote ? \"Cancel\" : \"New Note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), addingNote ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter note title\",\n          onKeyUp: e => setTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: classes.newNoteSubmitBtn,\n          onClick: () => createNewNote(title, body),\n          children: \"Submit Note\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this) : null, /*#__PURE__*/_jsxDEV(List, {\n        children: notes.map(_note => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(SideBarItem, {\n              _note: _note,\n              selectNote: () => selectNote(_note.id),\n              deleteNote: () => deleteNote(_note.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this)]\n          }, _note.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 12\n    }, this);\n  }\n};\n\n_c = SideBar;\nexport default withStyles(styles)(SideBar);\n\nvar _c;\n\n$RefreshReg$(_c, \"SideBar\");","map":{"version":3,"sources":["/media/devdeadviz/1AAA83FAAA83D125/Projects/evernote-clone/src/sideBar/SideBar.js"],"names":["React","withStyles","styles","List","Divider","Button","SideBarItem","firebase","timestamp","SideBar","notes","classes","selectNote","deleteNote","title","setTitle","addingNote","setAddingNote","body","newNoteBtnClick","createNewNote","firestore","collection","add","sidebarContainer","newNoteBtn","e","target","value","newNoteSubmitBtn","map","_note","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAASC,OAAT,EAAkBC,MAAlB,QAAgC,mBAAhC;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,SAASC,SAAT,QAA0B,sBAA1B;;;AAEA,MAAMC,OAAO,GAAG,CAAC;AACfC,EAAAA,KADe;AAEfC,EAAAA,OAFe;AAGfC,EAAAA,UAHe;AAIfC,EAAAA,UAJe;AAKfC,EAAAA,KALe;AAMfC,EAAAA,QANe;AAOfC,EAAAA,UAPe;AAQfC,EAAAA,aARe;AASfC,EAAAA;AATe,CAAD,KAUV;AACJ,QAAMC,eAAe,GAAG,MAAM;AAC5BF,IAAAA,aAAa,CAAC,CAACD,UAAF,CAAb;AACAD,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,GAHD;;AAIA,QAAMK,aAAa,GAAG,YAAY;AAChC,UAAMb,QAAQ,CACXc,SADG,GAEHC,UAFG,CAEQ,OAFR,EAGHC,GAHG,CAGC;AACHT,MAAAA,KAAK,EAAEA,KADJ;AAEHI,MAAAA,IAAI,EAAEA,IAAI,IAAI,EAFX;AAGHV,MAAAA,SAAS,EAAEA;AAHR,KAHD,CAAN;AASAO,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,IAAAA,aAAa,CAAC,KAAD,CAAb;AACD,GAZD;;AAcA,MAAIP,KAAJ,EAAW;AACT,wBACE;AAAK,MAAA,SAAS,EAAEC,OAAO,CAACa,gBAAxB;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEL,eAAjB;AAAkC,QAAA,SAAS,EAAER,OAAO,CAACc,UAArD;AAAA,kBACGT,UAAU,GAAG,QAAH,GAAc;AAD3B;AAAA;AAAA;AAAA;AAAA,cADF,EAIGA,UAAU,gBACT;AAAA,gCACE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,WAAW,EAAC,kBAFd;AAGE,UAAA,OAAO,EAAGU,CAAD,IAAOX,QAAQ,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV;AAH1B;AAAA;AAAA;AAAA;AAAA,gBADF,eAME,QAAC,MAAD;AACE,UAAA,SAAS,EAAEjB,OAAO,CAACkB,gBADrB;AAEE,UAAA,OAAO,EAAE,MAAMT,aAAa,CAACN,KAAD,EAAQI,IAAR,CAF9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA,cADS,GAcP,IAlBN,eAmBE,QAAC,IAAD;AAAA,kBACGR,KAAK,CAACoB,GAAN,CAAWC,KAAD,IAAW;AACpB,8BACE;AAAA,oCACE,QAAC,WAAD;AACE,cAAA,KAAK,EAAEA,KADT;AAEE,cAAA,UAAU,EAAE,MAAMnB,UAAU,CAACmB,KAAK,CAACC,EAAP,CAF9B;AAGE,cAAA,UAAU,EAAE,MAAMnB,UAAU,CAACkB,KAAK,CAACC,EAAP;AAH9B;AAAA;AAAA;AAAA;AAAA,oBADF,eAME,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,oBANF;AAAA,aAAUD,KAAK,CAACC,EAAhB;AAAA;AAAA;AAAA;AAAA,kBADF;AAUD,SAXA;AADH;AAAA;AAAA;AAAA;AAAA,cAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAoCD,GArCD,MAqCO;AACL,wBAAO;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;AACF,CArED;;KAAMvB,O;AAuEN,eAAeR,UAAU,CAACC,MAAD,CAAV,CAAmBO,OAAnB,CAAf","sourcesContent":["import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport styles from \"./styles\";\nimport List from \"@material-ui/core/List\";\nimport { Divider, Button } from \"@material-ui/core\";\nimport SideBarItem from \"../sideBarItem/SideBarItem\";\nimport firebase from \"../firebase/firebase\";\nimport { timestamp } from \"../firebase/firebase\";\n\nconst SideBar = ({\n  notes,\n  classes,\n  selectNote,\n  deleteNote,\n  title,\n  setTitle,\n  addingNote,\n  setAddingNote,\n  body,\n}) => {\n  const newNoteBtnClick = () => {\n    setAddingNote(!addingNote);\n    setTitle(\"\");\n  };\n  const createNewNote = async () => {\n    await firebase\n      .firestore()\n      .collection(\"notes\")\n      .add({\n        title: title,\n        body: body || \"\",\n        timestamp: timestamp,\n      });\n\n    setTitle(\"\");\n    setAddingNote(false);\n  };\n\n  if (notes) {\n    return (\n      <div className={classes.sidebarContainer}>\n        <Button onClick={newNoteBtnClick} className={classes.newNoteBtn}>\n          {addingNote ? \"Cancel\" : \"New Note\"}\n        </Button>\n        {addingNote ? (\n          <div>\n            <input\n              type=\"text\"\n              placeholder=\"Enter note title\"\n              onKeyUp={(e) => setTitle(e.target.value)}\n            />\n            <Button\n              className={classes.newNoteSubmitBtn}\n              onClick={() => createNewNote(title, body)}\n            >\n              Submit Note\n            </Button>\n          </div>\n        ) : null}\n        <List>\n          {notes.map((_note) => {\n            return (\n              <div key={_note.id}>\n                <SideBarItem\n                  _note={_note}\n                  selectNote={() => selectNote(_note.id)}\n                  deleteNote={() => deleteNote(_note.id)}\n                />\n                <Divider></Divider>\n              </div>\n            );\n          })}\n        </List>\n      </div>\n    );\n  } else {\n    return <div></div>;\n  }\n};\n\nexport default withStyles(styles)(SideBar);\n"]},"metadata":{},"sourceType":"module"}