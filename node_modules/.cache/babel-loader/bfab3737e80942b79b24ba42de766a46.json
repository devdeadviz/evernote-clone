{"ast":null,"code":"import _regeneratorRuntime from\"/media/devdeadviz/1AAA83FAAA83D125/Projects/evernote-clone/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/media/devdeadviz/1AAA83FAAA83D125/Projects/evernote-clone/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import React,{useEffect,useRef}from\"react\";import ReactQuill from\"react-quill\";import debounce from\"../hooks/helpers\";import BorderColorIcon from\"@material-ui/icons/BorderColor\";import{withStyles}from\"@material-ui/core/styles\";import styles from\"./styles\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Editor=function Editor(_ref){var classes=_ref.classes,notes=_ref.notes,setNotes=_ref.setNotes,selectedNote=_ref.selectedNote,setSelectedNote=_ref.setSelectedNote,selectedNoteIndex=_ref.selectedNoteIndex,setSelectedNoteIndex=_ref.setSelectedNoteIndex,title=_ref.title,setTitle=_ref.setTitle,noteUpdate=_ref.noteUpdate,id=_ref.id,setId=_ref.setId,text=_ref.text,setText=_ref.setText;var updateBody=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(val){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return setText(val);case 2:console.log(\"body\",val);update(val);case 4:case\"end\":return _context.stop();}}},_callee);}));return function updateBody(_x){return _ref2.apply(this,arguments);};}();var update=useRef(debounce(function(text){console.log(\"ID\",selectedNote.id);noteUpdate(selectedNote.id,{title:selectedNote.title,body:text});},1500)).current;var updateTitle=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(txt){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return setTitle(txt);case 2:update();case 3:case\"end\":return _context2.stop();}}},_callee2);}));return function updateTitle(_x2){return _ref3.apply(this,arguments);};}();useEffect(function(){setText(selectedNote.body);setTitle(selectedNote.title);setId(selectedNote.id);},[selectedNote,setId,setText,setTitle]);return/*#__PURE__*/_jsxs(\"div\",{className:classes.editorContainer,children:[/*#__PURE__*/_jsx(BorderColorIcon,{className:classes.editIcon}),/*#__PURE__*/_jsx(\"input\",{className:classes.titleInput,placeholder:\"Note title...\",value:title?title:\"\",onChange:function onChange(e){return updateTitle(e);}}),/*#__PURE__*/_jsx(ReactQuill,{value:text,onChange:function onChange(e){return updateBody(e);}})]});};export default withStyles(styles)(Editor);","map":{"version":3,"sources":["/media/devdeadviz/1AAA83FAAA83D125/Projects/evernote-clone/src/editor/Editor.js"],"names":["React","useEffect","useRef","ReactQuill","debounce","BorderColorIcon","withStyles","styles","Editor","classes","notes","setNotes","selectedNote","setSelectedNote","selectedNoteIndex","setSelectedNoteIndex","title","setTitle","noteUpdate","id","setId","text","setText","updateBody","val","console","log","update","body","current","updateTitle","txt","editorContainer","editIcon","titleInput","e"],"mappings":"uRAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,MAA3B,KAAyC,OAAzC,CACA,MAAOC,CAAAA,UAAP,KAAuB,aAAvB,CACA,MAAOC,CAAAA,QAAP,KAAqB,kBAArB,CACA,MAAOC,CAAAA,eAAP,KAA4B,gCAA5B,CACA,OAASC,UAAT,KAA2B,0BAA3B,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,C,wFAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,MAeT,IAdJC,CAAAA,OAcI,MAdJA,OAcI,CAbJC,KAaI,MAbJA,KAaI,CAZJC,QAYI,MAZJA,QAYI,CAXJC,YAWI,MAXJA,YAWI,CAVJC,eAUI,MAVJA,eAUI,CATJC,iBASI,MATJA,iBASI,CARJC,oBAQI,MARJA,oBAQI,CAPJC,KAOI,MAPJA,KAOI,CANJC,QAMI,MANJA,QAMI,CALJC,UAKI,MALJA,UAKI,CAJJC,EAII,MAJJA,EAII,CAHJC,KAGI,MAHJA,KAGI,CAFJC,IAEI,MAFJA,IAEI,CADJC,OACI,MADJA,OACI,CACJ,GAAMC,CAAAA,UAAU,2FAAG,iBAAOC,GAAP,wIACXF,CAAAA,OAAO,CAACE,GAAD,CADI,QAEjBC,OAAO,CAACC,GAAR,CAAY,MAAZ,CAAoBF,GAApB,EACAG,MAAM,CAACH,GAAD,CAAN,CAHiB,sDAAH,kBAAVD,CAAAA,UAAU,6CAAhB,CAMA,GAAMI,CAAAA,MAAM,CAAGzB,MAAM,CACnBE,QAAQ,CAAC,SAACiB,IAAD,CAAU,CACjBI,OAAO,CAACC,GAAR,CAAY,IAAZ,CAAkBd,YAAY,CAACO,EAA/B,EACAD,UAAU,CAACN,YAAY,CAACO,EAAd,CAAkB,CAC1BH,KAAK,CAAEJ,YAAY,CAACI,KADM,CAE1BY,IAAI,CAAEP,IAFoB,CAAlB,CAAV,CAID,CANO,CAML,IANK,CADW,CAAN,CAQbQ,OARF,CAUA,GAAMC,CAAAA,WAAW,2FAAG,kBAAOC,GAAP,6IACZd,CAAAA,QAAQ,CAACc,GAAD,CADI,QAElBJ,MAAM,GAFY,wDAAH,kBAAXG,CAAAA,WAAW,8CAAjB,CAKA7B,SAAS,CAAC,UAAM,CACdqB,OAAO,CAACV,YAAY,CAACgB,IAAd,CAAP,CACAX,QAAQ,CAACL,YAAY,CAACI,KAAd,CAAR,CACAI,KAAK,CAACR,YAAY,CAACO,EAAd,CAAL,CACD,CAJQ,CAIN,CAACP,YAAD,CAAeQ,KAAf,CAAsBE,OAAtB,CAA+BL,QAA/B,CAJM,CAAT,CAMA,mBACE,aAAK,SAAS,CAAER,OAAO,CAACuB,eAAxB,wBACE,KAAC,eAAD,EAAiB,SAAS,CAAEvB,OAAO,CAACwB,QAApC,EADF,cAEE,cACE,SAAS,CAAExB,OAAO,CAACyB,UADrB,CAEE,WAAW,CAAC,eAFd,CAGE,KAAK,CAAElB,KAAK,CAAGA,KAAH,CAAW,EAHzB,CAIE,QAAQ,CAAE,kBAACmB,CAAD,QAAOL,CAAAA,WAAW,CAACK,CAAD,CAAlB,EAJZ,EAFF,cAQE,KAAC,UAAD,EAAY,KAAK,CAAEd,IAAnB,CAAyB,QAAQ,CAAE,kBAACc,CAAD,QAAOZ,CAAAA,UAAU,CAACY,CAAD,CAAjB,EAAnC,EARF,GADF,CAYD,CAvDD,CAyDA,cAAe7B,CAAAA,UAAU,CAACC,MAAD,CAAV,CAAmBC,MAAnB,CAAf","sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport ReactQuill from \"react-quill\";\nimport debounce from \"../hooks/helpers\";\nimport BorderColorIcon from \"@material-ui/icons/BorderColor\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport styles from \"./styles\";\n\nconst Editor = ({\n  classes,\n  notes,\n  setNotes,\n  selectedNote,\n  setSelectedNote,\n  selectedNoteIndex,\n  setSelectedNoteIndex,\n  title,\n  setTitle,\n  noteUpdate,\n  id,\n  setId,\n  text,\n  setText,\n}) => {\n  const updateBody = async (val) => {\n    await setText(val);\n    console.log(\"body\", val);\n    update(val);\n  };\n\n  const update = useRef(\n    debounce((text) => {\n      console.log(\"ID\", selectedNote.id);\n      noteUpdate(selectedNote.id, {\n        title: selectedNote.title,\n        body: text,\n      });\n    }, 1500)\n  ).current;\n\n  const updateTitle = async (txt) => {\n    await setTitle(txt);\n    update();\n  };\n\n  useEffect(() => {\n    setText(selectedNote.body);\n    setTitle(selectedNote.title);\n    setId(selectedNote.id);\n  }, [selectedNote, setId, setText, setTitle]);\n\n  return (\n    <div className={classes.editorContainer}>\n      <BorderColorIcon className={classes.editIcon}></BorderColorIcon>\n      <input\n        className={classes.titleInput}\n        placeholder=\"Note title...\"\n        value={title ? title : \"\"}\n        onChange={(e) => updateTitle(e)}\n      ></input>\n      <ReactQuill value={text} onChange={(e) => updateBody(e)}></ReactQuill>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(Editor);\n"]},"metadata":{},"sourceType":"module"}